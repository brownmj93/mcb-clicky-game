{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","onClick","handleClick","id","Wrapper","children","Title","App","state","friends","score","topScore","clickedArray","shuffle","array","j","x","i","length","Math","floor","random","renderCards","map","friend","key","includes","console","log","setState","push","checkTopScore","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4zDAgBeA,MAbf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMQ,U,MCAxEC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCE1BC,MAHf,SAAeX,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCwGvBE,E,2MAjGbC,MAAQ,CACNC,UACAC,MAAO,EACPC,SAAU,EACVC,aAAc,I,EAGhBC,QAAU,SAAAC,GAER,IAAIC,EAAGC,EAAGC,EACV,IAAKA,EAAIH,EAAMI,OAAS,EAAGD,EAAI,EAAGA,IAChCF,EAAII,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCD,EAAIF,EAAMG,GACVH,EAAMG,GAAKH,EAAMC,GACjBD,EAAMC,GAAKC,EAEb,OAAOF,G,EAGTQ,YAAc,WAAO,IACbb,EAAY,EAAKD,MAAjBC,QAGN,OAFAA,EAAU,EAAKI,QAAQJ,IAERc,KAAI,SAAAC,GAAM,OACvB,kBAAC,EAAD,CAEEtB,YAAa,EAAKA,YAClBC,GAAIqB,EAAOrB,GACXsB,IAAKD,EAAOrB,GACZL,KAAM0B,EAAO1B,KACbE,MAAOwB,EAAOxB,Y,EAYpBE,YAAc,SAAAC,GAAO,IAAD,EACY,EAAKK,MAA7BI,EADY,EACZA,aAAcF,EADF,EACEA,MAEhBE,EAAac,SAASvB,IACxBwB,QAAQC,IAAI,aACZ,EAAKC,SAAS,CAAEnB,MAAO,IACvB,EAAKmB,SAAS,CAAEjB,aAAc,OAK9Be,QAAQC,IAAI,oBACZhB,EAAakB,KAAK3B,GAClBO,GAAgB,EAChB,EAAKmB,SAAS,CAAEnB,UAEhB,EAAKqB,cAAcrB,IAErB,EAAKY,e,EAGPS,cAAgB,SAAArB,GACVA,GAAS,EAAKF,MAAMG,UAEtB,EAAKkB,SAAS,CAAElB,SAAUD,K,wEAQpB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,qBACA,2BAAIsB,KAAKxB,MAAME,OACf,yCAAesB,KAAKxB,MAAMG,UAEzBqB,KAAKxB,MAAMC,QAAQc,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CAEEtB,YAAa,EAAKA,YAClBC,GAAIqB,EAAOrB,GACXsB,IAAKD,EAAOrB,GACZL,KAAM0B,EAAO1B,KACbE,MAAOwB,EAAOxB,gB,GA1FRiC,a,MCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.55d5b6b9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)}/>\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    clickedArray: []\n  };\n\n  shuffle = array => {\n\n    var j, x, i;\n    for (i = array.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = array[i];\n      array[i] = array[j];\n      array[j] = x;\n    }\n    return array;\n\n  }\n  renderCards = () => {\n    let { friends } = this.state;\n    friends = this.shuffle(friends);\n\n    return friends.map(friend => (\n      <FriendCard\n        // removeFriend={this.removeFriend}\n        handleClick={this.handleClick}\n        id={friend.id}\n        key={friend.id}\n        name={friend.name}\n        image={friend.image}\n      />\n    ))\n  }\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n\n  handleClick = id => {\n    let { clickedArray, score } = this.state;\n\n    if (clickedArray.includes(id)) {\n      console.log(\"it exists\");\n      this.setState({ score: 0 })\n      this.setState({ clickedArray: [] });\n\n      // this.checkTopScore(this.state.score);\n    }\n    else {\n      console.log(\"it doesn't exist\");\n      clickedArray.push(id);\n      score = score + 1;\n      this.setState({ score });\n\n      this.checkTopScore(score);\n    }\n    this.renderCards();\n  };\n\n  checkTopScore = score => {\n    if (score >= this.state.topScore) {\n\n      this.setState({ topScore: score });\n    }\n  };\n\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <p>{this.state.score}</p>\n        <p>Top Score: {this.state.topScore}</p>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            // removeFriend={this.removeFriend}\n            handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}